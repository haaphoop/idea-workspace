package com.company.haaphoop.thinkingInJava.chapter9;

/**
 * Created by daishuli on 2017/6/27.
 */
public class Interface {
    /**
     * 接口和内部类为我们提供了一种将接口和实现分离的更加结构化的方法。
     * interface这个关键字产生一个完全抽象的类，根本没有提供任何具体实现。它允许创建者确定方法名，参数列表和返回类型，但是没有
     * 任何方法体。接口只提供了形式，而为提供任何实现。
     * 一个接口表示：任何实现了特定接口的类看起来都像这样。因此，任何使用某特定接口的代码都知道可以调用该接口的哪些方法，而且仅需
     * 知道这些。因此，接口被用来建立类与类之间的协议。像类一样，可以在interface关键字前面添加public关键字。如果不添加public关键字
     * ，则它只具有包访问权限，这样，它就只能在同一个包内可用。接口也可以包含域，但是这些域隐式地是static和final的。
     */
}
